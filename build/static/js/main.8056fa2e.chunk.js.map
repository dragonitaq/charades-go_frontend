{"version":3,"sources":["utils/textFit.js","assets/sprite.svg","redux/playContent/playContent.selector.js","redux/utilities/utilities.selector.js","redux/playDuration/playDuration.selector.js","redux/playContent/playContent.action.js","components/howToPlay/howToPlay.component.jsx","redux/utilities/utilities.action.js","components/settings/settings.component.jsx","redux/playDuration/playDuration.action.js","components/noFnPopUp/noFnPopUp.component.jsx","components/category/category.component.jsx","components/loader/commonLoader.component.jsx","pages/home/home.component.jsx","pages/play/play.component.jsx","pages/result/result.component.jsx","App.js","utils/scrollToTop.js","redux/playContent/playContent.utils.js","redux/playContent/playContent.reducer.js","redux/playDuration/playDuration.reducer.js","redux/utilities/utilities.reducer.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["root","factory","define","defaultSettings","alignVert","alignHoriz","multiLine","detectMultiLine","minFontSize","maxFontSize","reProcess","widthOnly","alignVertWithFlexbox","els","options","settings","key","hasOwnProperty","toArray","elType","Object","prototype","toString","call","i","length","processItem","el","isElement","getAttribute","innerSpan","originalHeight","originalHTML","originalWidth","low","mid","high","setAttribute","innerHTML","innerWidth","innerHeight","Error","outerHTML","indexOf","document","createElement","className","style","appendChild","hasClass","querySelector","replace","scrollHeight","parseInt","window","getComputedStyle","size","fontSize","scrollWidth","addStyleSheet","height","clientHeight","getPropertyValue","clientWidth","o","HTMLElement","nodeType","nodeName","element","cls","getElementById","join","css","type","id","body","selectplayContent","state","playContent","selectLanguage","createSelector","language","selectNeedLoader","needLoader","selectErrorMessage","errorMessage","selectCategories","categories","selectSelectedCategory","selectedCategory","selectVocabulary","vocabulary","selectItemIndex","itemIndex","selectGuessAmount","guessedAmount","selectGuessItems","guessedItems","selectCorrectAmount","correctAmount","selectCorrectItems","correctItems","selectUtilities","utilities","selectShowHowToPlay","showHowToPlay","selectShowNoFnPopUp","showNoFnPopUp","selectPlayTimer","playDuration","selectDuration","duration","selectCurrentTimer","currentTimer","updateItems","payload","HowToPlay","closeHowToPlay","event","target","props","toggleHowToPlay","this","onClick","href","sprite","React","Component","connect","dispatch","GameSettings","getCategories","value","updateLanguage","getCategoriesAsync","increaseDuration","decreaseDuration","htmlFor","name","defaultValue","onChange","mapStateToProps","createStructuredSelector","axios","get","then","response","data","catch","error","message","NoFnPopUp","Category","history","push","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","categoryId","find","category","_id","selectCategory","shuffledItems","shuffle","formattedTags","updateItemIndex","toggleNoFnPopUp","ii","tags","title","toUpperCase","description","authorName","setTimeout","likedAmount","savedAmount","selectAndShuffleAndUpdateItems","redirectToPlay","withRouter","Loader","Home","ShowNoFnPopUp","map","Play","intervalId","textFit","getElementsByClassName","handleKeyPress","keyCode","addGuessedWord","decreaseItemIndex","addCorrectWord","addEventListener","convertDurationToInitialTimer","copyInitialTimerToCurrentTimer","resetGuessedItems","resetCorrectItems","setInterval","countDownTimer","removeEventListener","clearInterval","onKeyDown","item","Result","shuffleAndUpdateItems","guessAmount","guessItems","App","exact","path","component","ScrollToTop","prevProps","location","scrollTo","children","addNewCorrectAmount","addNewCorrectWord","addNewGuessedAmount","addNewGuessedWord","initialState","vocabularyReducer","action","initialTimer","timerReducer","rootReducer","combineReducers","playContentReducer","playDurationReducer","utilitiesReducer","middlewares","logger","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8056fa2e.chunk.js","sourcesContent":["/**\r\n * textFit v2.3.1\r\n * Previously known as jQuery.textFit\r\n * 11/2014 by STRML (strml.github.com)\r\n * Github: https://github.com/STRML/textFit\r\n * MIT License\r\n */\r\n\r\n/* global define:true, document:true, window:true, HTMLElement:true */\r\n\r\n(function (root, factory) {\r\n  'use strict';\r\n\r\n  // UMD shim\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node/CommonJS\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser\r\n    root.textFit = factory();\r\n  }\r\n})(typeof global === 'object' ? global : this, function () {\r\n  'use strict';\r\n\r\n  var defaultSettings = {\r\n    alignVert: false, // if true, textFit will align vertically using css tables\r\n    alignHoriz: false, // if true, textFit will set text-align: center\r\n    multiLine: false, // if true, textFit will not set white-space: no-wrap\r\n    detectMultiLine: true, // disable to turn off automatic multi-line sensing\r\n    minFontSize: 6,\r\n    maxFontSize: 80,\r\n    reProcess: true, // if true, textFit will re-process already-fit nodes. Set to 'false' for better performance\r\n    widthOnly: false, // if true, textFit will fit text to element width, regardless of text height\r\n    alignVertWithFlexbox: false, // if true, textFit will use flexbox for vertical alignment\r\n  };\r\n\r\n  return function textFit(els, options) {\r\n    if (!options) options = {};\r\n\r\n    // Extend options.\r\n    var settings = {};\r\n    for (var key in defaultSettings) {\r\n      if (options.hasOwnProperty(key)) {\r\n        settings[key] = options[key];\r\n      } else {\r\n        settings[key] = defaultSettings[key];\r\n      }\r\n    }\r\n\r\n    // Convert jQuery objects into arrays\r\n    if (typeof els.toArray === 'function') {\r\n      els = els.toArray();\r\n    }\r\n\r\n    // Support passing a single el\r\n    var elType = Object.prototype.toString.call(els);\r\n    if (elType !== '[object Array]' && elType !== '[object NodeList]' && elType !== '[object HTMLCollection]') {\r\n      els = [els];\r\n    }\r\n\r\n    // Process each el we've passed.\r\n    for (var i = 0; i < els.length; i++) {\r\n      processItem(els[i], settings);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * The meat. Given an el, make the text inside it fit its parent.\r\n   * @param  {DOMElement} el       Child el.\r\n   * @param  {Object} settings     Options for fit.\r\n   */\r\n  function processItem(el, settings) {\r\n    if (!isElement(el) || (!settings.reProcess && el.getAttribute('textFitted'))) {\r\n      return false;\r\n    }\r\n\r\n    // Set textFitted attribute so we know this was processed.\r\n    if (!settings.reProcess) {\r\n      el.setAttribute('textFitted', 1);\r\n    }\r\n\r\n    var innerSpan, originalHeight, originalHTML, originalWidth;\r\n    var low, mid, high;\r\n\r\n    // Get element data.\r\n    originalHTML = el.innerHTML;\r\n    originalWidth = innerWidth(el);\r\n    originalHeight = innerHeight(el);\r\n\r\n    // Don't process if we can't find box dimensions\r\n    if (!originalWidth || (!settings.widthOnly && !originalHeight)) {\r\n      if (!settings.widthOnly) throw new Error('Set a static height and width on the target element ' + el.outerHTML + ' before using textFit!');\r\n      else throw new Error('Set a static width on the target element ' + el.outerHTML + ' before using textFit!');\r\n    }\r\n\r\n    // Add textFitted span inside this container.\r\n    if (originalHTML.indexOf('textFitted') === -1) {\r\n      innerSpan = document.createElement('span');\r\n      innerSpan.className = 'textFitted';\r\n      // Inline block ensure it takes on the size of its contents, even if they are enclosed\r\n      // in other tags like <p>\r\n      innerSpan.style['display'] = 'inline-block';\r\n      innerSpan.innerHTML = originalHTML;\r\n      el.innerHTML = '';\r\n      el.appendChild(innerSpan);\r\n    } else {\r\n      // Reprocessing.\r\n      innerSpan = el.querySelector('span.textFitted');\r\n      // Remove vertical align if we're reprocessing.\r\n      if (hasClass(innerSpan, 'textFitAlignVert')) {\r\n        innerSpan.className = innerSpan.className.replace('textFitAlignVert', '');\r\n        innerSpan.style['height'] = '';\r\n        el.className.replace('textFitAlignVertFlex', '');\r\n      }\r\n    }\r\n\r\n    // Prepare & set alignment\r\n    if (settings.alignHoriz) {\r\n      el.style['text-align'] = 'center';\r\n      innerSpan.style['text-align'] = 'center';\r\n    }\r\n\r\n    // Check if this string is multiple lines\r\n    // Not guaranteed to always work if you use wonky line-heights\r\n    var multiLine = settings.multiLine;\r\n    if (settings.detectMultiLine && !multiLine && innerSpan.scrollHeight >= parseInt(window.getComputedStyle(innerSpan)['font-size'], 10) * 2) {\r\n      multiLine = true;\r\n    }\r\n\r\n    // If we're not treating this as a multiline string, don't let it wrap.\r\n    if (!multiLine) {\r\n      el.style['white-space'] = 'nowrap';\r\n    }\r\n\r\n    low = settings.minFontSize;\r\n    high = settings.maxFontSize;\r\n\r\n    // Binary search for highest best fit\r\n    var size = low;\r\n    while (low <= high) {\r\n      mid = (high + low) >> 1;\r\n      innerSpan.style.fontSize = mid + 'px';\r\n      if (innerSpan.scrollWidth <= originalWidth && (settings.widthOnly || innerSpan.scrollHeight <= originalHeight)) {\r\n        size = mid;\r\n        low = mid + 1;\r\n      } else {\r\n        high = mid - 1;\r\n      }\r\n      // await injection point\r\n    }\r\n    // found, updating font if differs:\r\n    if (innerSpan.style.fontSize != size + 'px') innerSpan.style.fontSize = size + 'px';\r\n\r\n    // Our height is finalized. If we are aligning vertically, set that up.\r\n    if (settings.alignVert) {\r\n      addStyleSheet();\r\n      var height = innerSpan.scrollHeight;\r\n      if (window.getComputedStyle(el)['position'] === 'static') {\r\n        el.style['position'] = 'relative';\r\n      }\r\n      if (!hasClass(innerSpan, 'textFitAlignVert')) {\r\n        innerSpan.className = innerSpan.className + ' textFitAlignVert';\r\n      }\r\n      innerSpan.style['height'] = height + 'px';\r\n      if (settings.alignVertWithFlexbox && !hasClass(el, 'textFitAlignVertFlex')) {\r\n        el.className = el.className + ' textFitAlignVertFlex';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Calculate height without padding.\r\n  function innerHeight(el) {\r\n    var style = window.getComputedStyle(el, null);\r\n    return el.clientHeight - parseInt(style.getPropertyValue('padding-top'), 10) - parseInt(style.getPropertyValue('padding-bottom'), 10);\r\n  }\r\n\r\n  // Calculate width without padding.\r\n  function innerWidth(el) {\r\n    var style = window.getComputedStyle(el, null);\r\n    return el.clientWidth - parseInt(style.getPropertyValue('padding-left'), 10) - parseInt(style.getPropertyValue('padding-right'), 10);\r\n  }\r\n\r\n  //Returns true if it is a DOM element\r\n  function isElement(o) {\r\n    return typeof HTMLElement === 'object'\r\n      ? o instanceof HTMLElement //DOM2\r\n      : o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string';\r\n  }\r\n\r\n  function hasClass(element, cls) {\r\n    return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\r\n  }\r\n\r\n  // Better than a stylesheet dependency\r\n  function addStyleSheet() {\r\n    if (document.getElementById('textFitStyleSheet')) return;\r\n    var style = [\r\n      '.textFitAlignVert{',\r\n      'position: absolute;',\r\n      'top: 0; right: 0; bottom: 0; left: 0;',\r\n      'margin: auto;',\r\n      'display: flex;',\r\n      'justify-content: center;',\r\n      'flex-direction: column;',\r\n      '}',\r\n      '.textFitAlignVertFlex{',\r\n      'display: flex;',\r\n      '}',\r\n      '.textFitAlignVertFlex .textFitAlignVert{',\r\n      'position: static;',\r\n      '}',\r\n    ].join('');\r\n\r\n    var css = document.createElement('style');\r\n    css.type = 'text/css';\r\n    css.id = 'textFitStyleSheet';\r\n    css.innerHTML = style;\r\n    document.body.appendChild(css);\r\n  }\r\n});\r\n","export default __webpack_public_path__ + \"static/media/sprite.fc77486e.svg\";","import { createSelector } from 'reselect';\r\n\r\nconst selectplayContent = (state) => {\r\n  return state.playContent;\r\n};\r\n\r\nexport const selectLanguage = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.language;\r\n});\r\n\r\nexport const selectNeedLoader = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.needLoader;\r\n});\r\n\r\nexport const selectErrorMessage = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.errorMessage;\r\n});\r\n\r\nexport const selectCategories = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.categories;\r\n});\r\n\r\nexport const selectSelectedCategory = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.selectedCategory;\r\n});\r\n\r\nexport const selectVocabulary = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.vocabulary;\r\n});\r\n\r\nexport const selectItemIndex = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.itemIndex;\r\n});\r\n\r\nexport const selectGuessAmount = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.guessedAmount;\r\n});\r\n\r\nexport const selectGuessItems = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.guessedItems;\r\n});\r\n\r\nexport const selectCorrectAmount = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.correctAmount;\r\n});\r\n\r\nexport const selectCorrectItems = createSelector([selectplayContent], (playContent) => {\r\n  return playContent.correctItems;\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectUtilities = (state) => {\r\n  return state.utilities;\r\n};\r\n\r\nexport const selectShowHowToPlay = createSelector([selectUtilities], (showHowToPlay) => {\r\n  return showHowToPlay.showHowToPlay;\r\n});\r\n\r\nexport const selectShowNoFnPopUp = createSelector([selectUtilities], (showNoFnPopUp) => {\r\n  return showNoFnPopUp.showNoFnPopUp;\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectPlayTimer = (state) => {\r\n  return state.playDuration;\r\n};\r\n\r\nexport const selectDuration = createSelector([selectPlayTimer], (playDuration) => {\r\n  return playDuration.duration;\r\n});\r\n\r\nexport const selectCurrentTimer = createSelector([selectPlayTimer], (playDuration) => {\r\n  return playDuration.currentTimer;\r\n});\r\n","import axios from 'axios';\r\n\r\n/* ########################## Synchronous ######################### */\r\n\r\nexport const updateLanguage = (language) => {\r\n  return {\r\n    type: 'updateLanguage',\r\n    payload: language,\r\n  };\r\n};\r\n\r\nexport const getCategoriesStart = () => {\r\n  return {\r\n    type: 'getCategoriesStart',\r\n  };\r\n};\r\n\r\nexport const updateCategories = (categories) => {\r\n  return {\r\n    type: 'updateCategories',\r\n    payload: categories,\r\n  };\r\n};\r\n\r\nexport const getCategoriesFailure = (message) => {\r\n  return {\r\n    type: 'getCategoriesFailure',\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport const resetNeedLoader = () => {\r\n  return {\r\n    type: 'resetNeedLoader',\r\n  };\r\n};\r\n\r\nexport const selectCategory = (category) => {\r\n  return {\r\n    type: 'selectCategory',\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const updateItems = (vocabulary) => {\r\n  return {\r\n    type: 'updateItems',\r\n    payload: vocabulary,\r\n  };\r\n};\r\n\r\nexport const addCorrectWord = (item) => {\r\n  return {\r\n    type: 'addCorrectWord',\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const addGuessedWord = (item) => {\r\n  return {\r\n    type: 'addGuessedWord',\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const updateItemIndex = () => {\r\n  return {\r\n    type: 'updateItemIndex',\r\n  };\r\n};\r\n\r\nexport const decreaseItemIndex = () => {\r\n  return {\r\n    type: 'decreaseItemIndex',\r\n  };\r\n};\r\n\r\nexport const resetGuessedItems = () => {\r\n  return {\r\n    type: 'resetGuessedItems',\r\n  };\r\n};\r\n\r\nexport const resetCorrectItems = () => {\r\n  return {\r\n    type: 'resetCorrectItems',\r\n  };\r\n};\r\n\r\n/* ######################### Asynchronous ######################### */\r\n\r\nexport const getCategoriesAsync = (language) => {\r\n  return (dispatch) => {\r\n    dispatch(getCategoriesStart());\r\n\r\n    // This is use to text loader animation with 3 seconds delay\r\n    // setTimeout(() => {\r\n    //   axios\r\n    //     .get(`http://localhost:4000/api/v1/category/${language}`)\r\n    //     .then((response) => {\r\n    //       dispatch(updateCategories(response.data.data));\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       dispatch(getCategoriesFailure(error.message));\r\n    //     });\r\n    // }, 3000);\r\n\r\n    axios\r\n      /* At development, I need to change the IP address manually instead of just use localhost so that other devices in the same network can make API call. This is because localhost address for each device will be different.\r\n      I need use other devices like phone and ipad because I want to test responsive design. when I'm not, I can use back localhost. */\r\n      .get(`https://charadesgo.herokuapp.com/api/v1/category/${language}`)\r\n      .then((response) => {\r\n        dispatch(updateCategories(response.data.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getCategoriesFailure(error.message));\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleHowToPlay } from '../../redux/utilities/utilities.action';\r\nimport sprite from '../../assets/sprite.svg';\r\n\r\nimport './howToPlay.style.scss';\r\n\r\nclass HowToPlay extends React.Component {\r\n  closeHowToPlay = (event) => {\r\n    if (event.target.className === 'how-to-play__background') {\r\n      this.props.toggleHowToPlay();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { toggleHowToPlay } = this.props;\r\n    return (\r\n      <div\r\n        className='how-to-play__background'\r\n        onClick={(event) => {\r\n          this.closeHowToPlay(event);\r\n        }}\r\n      >\r\n        <div className='how-to-play__content'>\r\n          <h6 className='how-to-play__title'>\r\n            <div></div>\r\n            <span>How to play?</span>\r\n            <svg\r\n              onClick={() => {\r\n                toggleHowToPlay();\r\n              }}\r\n            >\r\n              <use className='how-to-play__cross' href={sprite + '#cross'} />\r\n            </svg>\r\n          </h6>\r\n          <div className='how-to-play__description'>\r\n            <p>&#10024; You need at least 2 players.</p>\r\n            <p>\r\n              &#10024; Choose one party to describe the item (words or phrases) that is displayed on the screen. The default describing method is to use vocal without mentioning any word that appears\r\n              on the screen.\r\n            </p>\r\n            <p>&#10024; The other party is to try to guess the correct item (words or phrases) that is being described without viewing the screen.</p>\r\n            <p>\r\n              &#10024; There is a time limit. With every successive guessing, you gain a point. Either party can choose to skip the current item if they find it too difficult. Until the timer is over,\r\n              you end with the amount of point you get.\r\n            </p>\r\n            <p>\r\n              &#10024; There are different methods to describe the item on screen. For example, one is only allowed to act without making any sound. Another example is to make sound effect only without saying a word.\r\n              Usually if the method is not the default, it is mentioned in the category's description.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleHowToPlay: () => dispatch(toggleHowToPlay()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(HowToPlay);\r\n","export const toggleHowToPlay = () => {\r\n  return {\r\n    type: 'toggleHowToPlay',\r\n  };\r\n};\r\nexport const toggleNoFnPopUp = () => {\r\n  return {\r\n    type: 'toggleNoFnPopUp',\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectDuration } from '../../redux/playDuration/playDuration.selector';\r\nimport { selectLanguage } from '../../redux/playContent/playContent.selector';\r\nimport { selectShowHowToPlay } from '../../redux/utilities/utilities.selector';\r\nimport { increaseDuration, decreaseDuration } from '../../redux/playDuration/playDuration.action';\r\nimport { updateLanguage, getCategoriesAsync, updateItems } from '../../redux/playContent/playContent.action';\r\nimport { toggleHowToPlay } from '../../redux/utilities/utilities.action';\r\nimport sprite from '../../assets/sprite.svg';\r\n\r\nimport './settings.style.scss';\r\nimport HowToPlay from '../howToPlay/howToPlay.component';\r\n\r\nclass GameSettings extends React.Component {\r\n  componentDidMount() {\r\n    const language = document.getElementById('language').value;\r\n    this.props.updateLanguage(language);\r\n    this.props.getCategoriesAsync(language);\r\n  }\r\n\r\n  getCategories = (event) => {\r\n    const language = event.target.value;\r\n    this.props.updateLanguage(language);\r\n    this.props.getCategoriesAsync(language);\r\n  };\r\n\r\n  render() {\r\n    const { language, duration, increaseDuration, decreaseDuration, showHowToPlay, toggleHowToPlay } = this.props;\r\n    return (\r\n      <div className='game-settings'>\r\n        {showHowToPlay ? <HowToPlay /> : null}\r\n        <h2>Game Settings</h2>\r\n        <div>\r\n          <label className='label-language' htmlFor='language'>\r\n            Language:{' '}\r\n          </label>\r\n          <select className='select-language' name='language' id='language' defaultValue={`${language ? language : 'english'}`} onChange={this.getCategories}>\r\n            <option value='english'>English</option>\r\n            <option value='chinese'>Chinese</option>\r\n          </select>\r\n        </div>\r\n        <div className='duration'>\r\n          <p>Duration:</p>\r\n          <svg\r\n            className={`arrow-icon ${duration === 1 ? 'arrow-icon--grey' : null}`}\r\n            onClick={\r\n              duration === 1\r\n                ? null\r\n                : () => {\r\n                    decreaseDuration();\r\n                  }\r\n            }\r\n          >\r\n            <use href={sprite + '#left-arrow'} />\r\n          </svg>\r\n          <span>\r\n            {duration} {`${duration === 1 ? 'minute' : 'minutes'}`}\r\n          </span>\r\n          <svg\r\n            className={`arrow-icon ${duration === 3 ? 'arrow-icon--grey' : null}`}\r\n            onClick={\r\n              duration === 3\r\n                ? null\r\n                : () => {\r\n                    increaseDuration();\r\n                  }\r\n            }\r\n          >\r\n            <use href={sprite + '#right-arrow'} />\r\n          </svg>\r\n        </div>\r\n        <div\r\n          className='how-to-play'\r\n          onClick={() => {\r\n            toggleHowToPlay();\r\n          }}\r\n        >\r\n          How to play?\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateLanguage: (language) => dispatch(updateLanguage(language)),\r\n    getCategoriesAsync: (language) => dispatch(getCategoriesAsync(language)),\r\n    updateItems: (vocabulary) => dispatch(updateItems(vocabulary)),\r\n    increaseDuration: () => dispatch(increaseDuration()),\r\n    decreaseDuration: () => dispatch(decreaseDuration()),\r\n    toggleHowToPlay: () => dispatch(toggleHowToPlay()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  language: selectLanguage,\r\n  duration: selectDuration,\r\n  showHowToPlay: selectShowHowToPlay,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSettings);\r\n","export const increaseDuration = () => {\r\n  return {\r\n    type: 'increaseDuration',\r\n  };\r\n};\r\n\r\nexport const decreaseDuration = () => {\r\n  return {\r\n    type: 'decreaseDuration',\r\n  };\r\n};\r\n\r\nexport const convertDurationToInitialTimer = () => {\r\n  return {\r\n    type: 'convertDurationToInitialTimer',\r\n  };\r\n};\r\n\r\nexport const copyInitialTimerToCurrentTimer = () => {\r\n  return {\r\n    type: 'copyInitialTimerToCurrentTimer',\r\n  };\r\n};\r\n\r\nexport const countDownTimer = () => {\r\n  return {\r\n    type: 'countDownTimer',\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport './noFnPopUp.component.scss';\r\n\r\nconst NoFnPopUp = () => {\r\n  return (\r\n    // <div className='noFnPopUp-wrapper'>\r\n      <div className='noFnPopUp'>This feature is not available.</div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default NoFnPopUp;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCategories } from '../../redux/playContent/playContent.selector';\r\nimport { selectCategory, updateItems, updateItemIndex } from '../../redux/playContent/playContent.action';\r\nimport { toggleNoFnPopUp } from '../../redux/utilities/utilities.action';\r\nimport sprite from '../../assets/sprite.svg';\r\n\r\nimport './category.style.scss';\r\n\r\nclass Category extends React.Component {\r\n  redirectToPlay() {\r\n    this.props.history.push('/play');\r\n  }\r\n\r\n  // This is array shuffling algorithm known as Fisher–Yates Shuffle. Credit: https://bost.ocks.org/mike/shuffle/\r\n  shuffle(array) {\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  // Hope it's ok to do all actions in one function.\r\n  selectAndShuffleAndUpdateItems(categoryId) {\r\n    const selectedCategory = this.props.categories.find((category) => category._id === categoryId);\r\n    this.props.selectCategory(selectedCategory);\r\n    const shuffledItems = this.shuffle(selectedCategory.vocabulary);\r\n    this.props.updateItems(shuffledItems);\r\n  }\r\n\r\n  render() {\r\n    const { category, updateItemIndex, toggleNoFnPopUp } = this.props;\r\n\r\n    // Coerce array into string (Work in Chrome)\r\n    // const coercedTags = `#${category.tags}`;\r\n    // const formattedTags = coercedTags.replaceAll(',', ' #');\r\n\r\n    // I found out Safari can't coerce array into string. Not sure about Firefox. So I have to use for-loop.\r\n    let formattedTags;\r\n    for (let ii = 0; ii < category.tags.length; ii++) {\r\n      if (formattedTags) {\r\n        formattedTags = `${formattedTags} #${category.tags[ii]}`;\r\n      } else {\r\n        formattedTags = `#${category.tags[ii]}`;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='category-card'>\r\n        <div className='category-details'>\r\n          <h3 className='category-details__title'>{category.title.toUpperCase()}</h3>\r\n          <div className='category-details__horizontal-divider'></div>\r\n          <p className='category-details__description'>{category.description}</p>\r\n          <div className='category-details__tags'>\r\n            <p className='category-details__items'>{formattedTags}</p>\r\n          </div>\r\n          <div className='category-details__meta'>\r\n            <p className='category-details__author'>{`Author: ${category.authorName}`}</p>\r\n            <p className='category-details__item-count'>{`${category.vocabulary.length} items`}</p>\r\n          </div>\r\n          <div className='category-details__btn'>\r\n            <div\r\n              className='category-details__btn-like'\r\n              title='like'\r\n              onClick={() => {\r\n                toggleNoFnPopUp();\r\n                setTimeout(() => {\r\n                  toggleNoFnPopUp();\r\n                }, 1500);\r\n              }}\r\n            >\r\n              <svg className='category-details__btn-icon'>\r\n                <use href={sprite + '#like'} />\r\n              </svg>\r\n              <p className='category-details__btn-like--number'>{category.likedAmount ? category.likedAmount : '0'}</p>\r\n            </div>\r\n            <div\r\n              className='category-details__btn-save'\r\n              title='save'\r\n              onClick={() => {\r\n                toggleNoFnPopUp();\r\n                setTimeout(() => {\r\n                  toggleNoFnPopUp();\r\n                }, 1500);\r\n              }}\r\n            >\r\n              <svg className=' category-details__btn-icon'>\r\n                <use href={sprite + '#save'} />\r\n              </svg>\r\n              <p className='category-details__btn-save--number'>{category.savedAmount ? category.savedAmount : '0'}</p>\r\n            </div>\r\n            <div\r\n              className='category-details__btn-report'\r\n              title='report'\r\n              onClick={() => {\r\n                toggleNoFnPopUp();\r\n                setTimeout(() => {\r\n                  toggleNoFnPopUp();\r\n                }, 1500);\r\n              }}\r\n            >\r\n              <svg className=' category-details__btn-icon'>\r\n                <use href={sprite + '#report'} />\r\n              </svg>\r\n              <p className='category-details__btn-report--number'>Report</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='category-play-btn'\r\n          onClick={() => {\r\n            // The order of these functions is important\r\n            this.selectAndShuffleAndUpdateItems(category._id);\r\n            updateItemIndex();\r\n            this.redirectToPlay();\r\n          }}\r\n        >\r\n          <p>Play!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    selectCategory: (category) => dispatch(selectCategory(category)),\r\n    updateItems: (vocabulary) => dispatch(updateItems(vocabulary)),\r\n    updateItemIndex: () => dispatch(updateItemIndex()),\r\n    toggleNoFnPopUp: () => dispatch(toggleNoFnPopUp()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categories: selectCategories,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Category));\r\n","import React from 'react';\r\n\r\nimport './commonLoader.style.scss';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader-container'>\r\n      <div className='loader'>\r\n        <div className='loader-overlay'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport sprite from '../../assets/sprite.svg';\r\nimport { selectNeedLoader, selectErrorMessage, selectCategories } from '../../redux/playContent/playContent.selector';\r\nimport { selectShowHowToPlay, selectShowNoFnPopUp } from '../../redux/utilities/utilities.selector';\r\nimport GameSettings from '../../components/settings/settings.component';\r\nimport HowToPlay from '../../components/howToPlay/howToPlay.component';\r\nimport NoFnPopUp from '../../components/noFnPopUp/noFnPopUp.component';\r\nimport Category from '../../components/category/category.component';\r\nimport Loader from '../../components/loader/commonLoader.component';\r\n\r\nimport './home.style.scss';\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    const { needLoader, errorMessage, categories, showHowToPlay, ShowNoFnPopUp } = this.props;\r\n    return (\r\n      <div>\r\n        {ShowNoFnPopUp ? <NoFnPopUp /> : null}\r\n        {showHowToPlay ? <HowToPlay /> : null}\r\n        <div className='header'>\r\n          <svg className='charade-logo'>\r\n            <use href={sprite + '#charade-logo'} />\r\n          </svg>\r\n          <h1>Charades Go</h1>\r\n        </div>\r\n        <div>\r\n          <GameSettings />\r\n        </div>\r\n        <div className='categories-container'>\r\n          <h2 className='categories-title'>Categories</h2>\r\n          {/* Check if component need loader to display, if not then check if the data fetching consists of error message, if not then only render categories component. */}\r\n          {needLoader ? (\r\n            <Loader />\r\n          ) : (\r\n            [\r\n              // If the API call receives error, display the error message.\r\n              errorMessage ? (\r\n                <div className='error-message'>{`Error: ${errorMessage}`}</div>\r\n              ) : (\r\n                // If API call is successful, then only render the categories content.\r\n                <div className='categories'>\r\n                  {categories.map((category) => {\r\n                    return <Category id={category._id} category={category} />;\r\n                  })}\r\n                </div>\r\n              ),\r\n            ]\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  needLoader: selectNeedLoader,\r\n  errorMessage: selectErrorMessage,\r\n  categories: selectCategories,\r\n  showHowToPlay: selectShowHowToPlay,\r\n  ShowNoFnPopUp: selectShowNoFnPopUp,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport textFit from '../../utils/textFit';\r\n\r\nimport { updateItems, addCorrectWord, addGuessedWord, updateItemIndex, decreaseItemIndex, resetGuessedItems, resetCorrectItems } from '../../redux/playContent/playContent.action';\r\nimport { convertDurationToInitialTimer, copyInitialTimerToCurrentTimer, countDownTimer } from '../../redux/playDuration/playDuration.action';\r\nimport { selectVocabulary, selectItemIndex, selectCorrectAmount } from '../../redux/playContent/playContent.selector';\r\nimport { selectCurrentTimer } from '../../redux/playDuration/playDuration.selector';\r\nimport sprite from '../../assets/sprite.svg';\r\n\r\nimport './play.style.scss';\r\n\r\nclass Play extends React.Component {\r\n  state = {\r\n    intervalId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyPress);\r\n    this.props.convertDurationToInitialTimer();\r\n    this.props.copyInitialTimerToCurrentTimer();\r\n    this.props.resetGuessedItems();\r\n    this.props.resetCorrectItems();\r\n    // To run textFit for the initial item\r\n    this.textFit();\r\n    // Make the timer tick for each second\r\n    this.intervalId = setInterval(() => {\r\n      this.props.countDownTimer();\r\n    }, 1000);\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    // Every time this component update, check the timer. When the timer reaches 0 second, redirect to /result page.\r\n    if (this.props.currentTimer === 0) {\r\n      this.props.history.push('/result');\r\n    }\r\n\r\n    /* To improve performance, textFit only run when the item changes. It also won't run when item finishes. This is because textFit is a large fn which may potentially affect performance.\r\n    We can access previous state using the props passed in here by Redux. */\r\n    if (this.props.itemIndex !== props.itemIndex && this.props.itemIndex >= 0) {\r\n      this.textFit();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Remove keydown event listener to prevent user pressing space or enter again.\r\n    document.removeEventListener('keydown', this.handleKeyPress);\r\n    if (this.props.vocabulary[this.props.itemIndex]) {\r\n      this.props.addGuessedWord(this.props.vocabulary[this.props.itemIndex]);\r\n    }\r\n    // Stop the timer count.\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  textFit = () => {\r\n    textFit(document.getElementsByClassName('item-container'), { maxFontSize: 250, multiLine: true });\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    // When space key is pressed, update guessedWord array\r\n    if (event.keyCode === 32) {\r\n      this.props.addGuessedWord(this.props.vocabulary[this.props.itemIndex]);\r\n      this.props.decreaseItemIndex();\r\n    }\r\n    // When enter key is pressed, update correctWord array\r\n    if (event.keyCode === 13) {\r\n      this.props.addCorrectWord(this.props.vocabulary[this.props.itemIndex]);\r\n      this.props.decreaseItemIndex();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { vocabulary, itemIndex, correctAmount, currentTimer, addCorrectWord, addGuessedWord, decreaseItemIndex, history } = this.props;\r\n\r\n    return (\r\n      <div className='play-root' onKeyDown={(event) => this.handleKeyPress(event)}>\r\n        <div className='play-header'>\r\n          <div className='metrics'>\r\n            <div className='timer'>\r\n              <svg className='sand-timer-icon'>\r\n                <use href={sprite + '#sand-timer'} />\r\n              </svg>\r\n              <div className='timer-count'>{currentTimer}S</div>\r\n            </div>\r\n            <div className='score'>\r\n              <svg className='checkmark-icon'>\r\n                <use href={sprite + '#checkmark'} />\r\n              </svg>\r\n              <div className='score-count'>{correctAmount}</div>\r\n            </div>\r\n          </div>\r\n          <div className='nav-button'>\r\n            <svg className='exit-button' onClick={() => history.push('/')}>\r\n              <use href={sprite + '#exit-button'} />\r\n            </svg>\r\n            {/* At the moment, I modify this mute button to end the game for development purpose. */}\r\n            {/* <svg className='mute-button' onClick={() => history.push('/result')}>\r\n              <use href={sprite + '#sound'} />\r\n            </svg> */}\r\n          </div>\r\n        </div>\r\n        <div className='item-container'>{itemIndex >= 0 ? vocabulary[itemIndex].toUpperCase() : history.push('/result')}</div>\r\n\r\n        <div className='play-buttons'>\r\n          <div\r\n            className='correct-button'\r\n            onClick={() => {\r\n              addCorrectWord(vocabulary[itemIndex]);\r\n              decreaseItemIndex();\r\n            }}\r\n          >\r\n            <span className='correct-button__text'>Correct</span>\r\n            <span className='correct-button__shortcut'>(Press Enter)</span>\r\n          </div>\r\n          <div\r\n            className='next-button'\r\n            onClick={() => {\r\n              addGuessedWord(vocabulary[itemIndex]);\r\n              decreaseItemIndex();\r\n            }}\r\n          >\r\n            <span className='next-button__text'>Next</span>\r\n            <span className='next-button__shortcut'>(Press Spacebar)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateItems: (vocabulary) => dispatch(updateItems(vocabulary)),\r\n    addCorrectWord: (item) => dispatch(addCorrectWord(item)),\r\n    addGuessedWord: (item) => dispatch(addGuessedWord(item)),\r\n    updateItemIndex: () => dispatch(updateItemIndex()),\r\n    decreaseItemIndex: () => dispatch(decreaseItemIndex()),\r\n    convertDurationToInitialTimer: () => dispatch(convertDurationToInitialTimer()),\r\n    copyInitialTimerToCurrentTimer: () => dispatch(copyInitialTimerToCurrentTimer()),\r\n    countDownTimer: () => dispatch(countDownTimer()),\r\n    resetGuessedItems: () => dispatch(resetGuessedItems()),\r\n    resetCorrectItems: () => dispatch(resetCorrectItems()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  vocabulary: selectVocabulary,\r\n  itemIndex: selectItemIndex,\r\n  correctAmount: selectCorrectAmount,\r\n  currentTimer: selectCurrentTimer,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Play));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { selectSelectedCategory, selectItemIndex, selectGuessAmount, selectGuessItems, selectCorrectAmount, selectCorrectItems } from '../../redux/playContent/playContent.selector.js';\r\nimport { updateItems, updateItemIndex } from '../../redux/playContent/playContent.action';\r\nimport sprite from '../../assets/sprite.svg';\r\n\r\nimport './result.style.scss';\r\n\r\nclass Result extends React.Component {\r\n  // May not need the lifecycle method. Maybe can convert back to functional component.\r\n\r\n  redirectToPlay = () => {\r\n    this.props.history.push('/play');\r\n  };\r\n\r\n  // NOTE Actually, the whole items shuffling and update itemIndex operation should be done within /play page component. Because I couldn't get the itemIndex variable right due to async React callback. But I get solution which is to leverage setTimeout function with delay=0 to ensure the `itemIndex.length` get executed in the last order of the execution stack.\r\n  shuffle = (array) => {\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  shuffleAndUpdateItems = () => {\r\n    const shuffledItems = this.shuffle(this.props.selectedCategory.vocabulary);\r\n    this.props.updateItems(shuffledItems);\r\n  };\r\n\r\n  render() {\r\n    const { updateItemIndex, itemIndex, guessAmount, guessItems, correctAmount, correctItems, history } = this.props;\r\n    return (\r\n      <div>\r\n        <div className='score-container'>\r\n          <svg className='icon-home' onClick={() => history.push('/')}>\r\n            <use href={sprite + '#home'} />\r\n          </svg>\r\n          <div className='score'>\r\n            <div className='correct-score'>\r\n              Correct:\r\n              <span>{` ${correctAmount}`}</span>\r\n            </div>\r\n            <div className='tried-score'>\r\n              Tried:\r\n              <span>{` ${guessAmount}`}</span>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            className='icon-replay-button'\r\n            onClick={() => {\r\n              this.shuffleAndUpdateItems();\r\n              updateItemIndex();\r\n              this.redirectToPlay();\r\n            }}\r\n          >\r\n            <use href={sprite + '#replay-button'} />\r\n          </svg>\r\n        </div>\r\n        {/* This message will display only when user used up all the items yet the timer hasn't finish. */}\r\n        <div className='no-more-item'>{itemIndex < 0 ? <p>You have used up all the items in the category!</p> : null}</div>\r\n        <div className='vocabulary-items'>\r\n          <div className='vocabulary-items__container vocabulary-items__container--tried'>\r\n            <h3 className='vocabulary-item__title'>Tried Item(s) List:</h3>\r\n            <div>\r\n              {guessItems.map((item) => {\r\n                return <p id={item}>{item.toUpperCase()}</p>;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className='vocabulary-items__container vocabulary-items__container--correct'>\r\n            <h3 className='vocabulary-item__title'>Correct Item(s) List:</h3>\r\n            <div>\r\n              {correctItems.map((item) => {\r\n                return <p>{item.toUpperCase()}</p>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateItems: (vocabulary) => dispatch(updateItems(vocabulary)),\r\n    updateItemIndex: () => dispatch(updateItemIndex()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  selectedCategory: selectSelectedCategory,\r\n  itemIndex: selectItemIndex,\r\n  guessAmount: selectGuessAmount,\r\n  guessItems: selectGuessItems,\r\n  correctAmount: selectCorrectAmount,\r\n  correctItems: selectCorrectItems,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Result));\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/home/home.component';\nimport Play from './pages/play/play.component';\nimport Result from './pages/result/result.component';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className='App'>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          {/* Need to remove these 2 routes in production. */}\n          <Route exact path='/play' component={Play} />\n          <Route exact path='/result' component={Result} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\r\nThis implementation is from official Redux Router.\r\n\r\nThis is HOC that makes site-wide page reset scrolling position to top after redirection.\r\nOr just render it bare anywhere you want, but just one: <ScrollToTop/>\r\n*/\r\n\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","export const addNewCorrectAmount = (correctAmount) => {\r\n  return (correctAmount = correctAmount + 1);\r\n};\r\n\r\nexport const addNewCorrectWord = (correctItems, payload) => {\r\n  return [...correctItems, payload];\r\n};\r\n\r\nexport const addNewGuessedAmount = (guessAmount) => {\r\n  return (guessAmount = guessAmount + 1);\r\n};\r\n\r\nexport const addNewGuessedWord = (guessItems, payload) => {\r\n  return [...guessItems, payload];\r\n};\r\n","import { addNewCorrectAmount, addNewCorrectWord, addNewGuessedAmount, addNewGuessedWord } from './playContent.utils';\r\n\r\nconst initialState = {\r\n  language: '',\r\n  /* My idea of handling the loading page for while fetching async data is to have needLoader default to true. This means that when a component did mount, the initial boolean value is true, thus trigger to render loader component. When the data is successfully fetched, we then set this value to false, this in turn trigger to render the desired component. When the component unmount, we then set the value default back to true, so next time when we need to mount a component that needs loading state (page), it will have value true for it to work initially.\r\n  In short, once we finish fetching data, set it to false. When component unmount, set back to true. */\r\n  needLoader: true,\r\n  errorMessage: '',\r\n  categories: [],\r\n  selectedCategory: {},\r\n  vocabulary: [],\r\n  itemIndex: 0,\r\n  guessedAmount: 0,\r\n  guessedItems: [],\r\n  correctAmount: 0,\r\n  correctItems: [],\r\n};\r\n\r\nconst vocabularyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'updateLanguage':\r\n      return {\r\n        ...state,\r\n        language: action.payload,\r\n      };\r\n    case 'getCategoriesStart':\r\n      return {\r\n        ...state,\r\n        needLoader: true,\r\n      };\r\n    case 'updateCategories':\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n        needLoader: false,\r\n      };\r\n    case 'getCategoriesFailure':\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload,\r\n        needLoader: false,\r\n      };\r\n    case 'resetNeedLoader':\r\n      return {\r\n        ...state,\r\n        needLoader: true,\r\n      };\r\n    case 'selectCategory':\r\n      return {\r\n        ...state,\r\n        selectedCategory: action.payload,\r\n      };\r\n    case 'updateItems':\r\n      return {\r\n        ...state,\r\n        vocabulary: action.payload,\r\n      };\r\n    case 'addCorrectWord':\r\n      return {\r\n        ...state,\r\n        correctAmount: addNewCorrectAmount(state.correctAmount),\r\n        correctItems: addNewCorrectWord(state.correctItems, action.payload),\r\n        guessedAmount: addNewGuessedAmount(state.guessedAmount),\r\n      };\r\n    case 'addGuessedWord':\r\n      return {\r\n        ...state,\r\n        guessedAmount: addNewGuessedAmount(state.guessedAmount),\r\n        guessedItems: addNewGuessedWord(state.guessedItems, action.payload),\r\n      };\r\n    case 'updateItemIndex':\r\n      return {\r\n        ...state,\r\n        itemIndex: state.vocabulary.length - 1,\r\n      };\r\n    case 'decreaseItemIndex':\r\n      return {\r\n        ...state,\r\n        itemIndex: state.itemIndex - 1,\r\n      };\r\n    case 'resetGuessedItems':\r\n      return {\r\n        ...state,\r\n        guessedAmount: 0,\r\n        guessedItems: [],\r\n      };\r\n    case 'resetCorrectItems':\r\n      return {\r\n        ...state,\r\n        correctAmount: 0,\r\n        correctItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default vocabularyReducer;\r\n","const initialState = {\r\n  duration: 1, // minute\r\n  initialTimer: 0, // second\r\n  currentTimer: 0, // second\r\n};\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'increaseDuration':\r\n      return {\r\n        ...state,\r\n        duration: state.duration + 1,\r\n      };\r\n    case 'decreaseDuration':\r\n      return {\r\n        ...state,\r\n        duration: state.duration - 1,\r\n      };\r\n    case 'convertDurationToInitialTimer':\r\n      return {\r\n        ...state,\r\n        initialTimer: state.duration * 60,\r\n      };\r\n    case 'copyInitialTimerToCurrentTimer':\r\n      return {\r\n        ...state,\r\n        currentTimer: state.initialTimer,\r\n      };\r\n    case 'countDownTimer':\r\n      return {\r\n        ...state,\r\n        currentTimer: state.currentTimer - 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;\r\n","const initialState = {\r\n  showHowToPlay: false,\r\n  showNoFnPopUp: false,\r\n};\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'toggleHowToPlay':\r\n      return {\r\n        ...state,\r\n        showHowToPlay: !state.showHowToPlay,\r\n      };\r\n    case 'toggleNoFnPopUp':\r\n      return {\r\n        ...state,\r\n        showNoFnPopUp: !state.showNoFnPopUp,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport playContentReducer from './playContent/playContent.reducer';\r\nimport playDurationReducer from './playDuration/playDuration.reducer';\r\nimport utilitiesReducer from './utilities/utilities.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  playContent: playContentReducer,\r\n  playDuration: playDurationReducer,\r\n  utilities: utilitiesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst middlewares = [logger, thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n// For when not using Chrome redux dev tool extension.\r\n// export const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport ScrollToTop from './utils/scrollToTop';\nimport store from './redux/store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ScrollToTop>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </ScrollToTop>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}